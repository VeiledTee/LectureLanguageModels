//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Provides a concise explanation of how a transistor controls current flow via voltage at its control terminal. Clearly distinguishes saturation (on state) and cutoff (off state) with voltage conditions.
- **Partial Credit (1–2 pts):** Explains the switching concept but omits key details (e.g., saturation/cutoff states or voltage thresholds).
- **No Credit (0 pts):** Incorrect or irrelevant explanation (e.g., describes amplification instead of switching).
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Accurately draws the truth table and explains that the output is 0 **only** when both inputs are 1.
- **Partial Credit (1–2 pts):** Correct table but incomplete explanation (e.g., fails to specify the 1-1 condition for 0 output).
- **No Credit (0 pts):** Incorrect table or explanation (e.g., mislabels outputs).
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Describes a multiplexer as a device that selects one input via control signals and provides a clear example (e.g., sensor selection, data routing).
- **Partial Credit (1–2 pts):** Explains selection function but provides a vague/incorrect example or omits control signals.
- **No Credit (0 pts):** Fails to define the multiplexer or example.
//// RUBRIC: **Total Points: 4**
- **Full Credit (4 pts):** Clearly distinguishes the datapath (arithmetic/logic operations, data movement) and control unit (instruction decoding, signal coordination). Links both to CPU functionality.
- **Partial Credit (2–3 pts):** Describes one component correctly but incorrectly characterizes the others or lacks detail.
- **No Credit (0 pts):** Incorrectly defines both components.
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Compares assembly (low-level, hardware-specific, manual resource management) and high-level languages (abstraction, readability, portability).
- **Partial Credit (1–2 pts):** Identifies one difference (e.g., abstraction) but lacks depth or misses key contrasts.
- **No Credit (0 pts):** Fails to differentiate or provides incorrect comparisons.
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Explains how gate voltage creates a conductive channel (enhancement mode) and ties this to switching. Includes terms like source, drain, and gate.
- **Partial Credit (1–2 pts):** Mentions voltage control but omits channel formation or mode details.
- **No Credit (0 pts):** Incorrect mechanism (e.g., bipolar behavior).
//// RUBRIC: **Total Points: 2**
- **Full Credit (2 pts):** Defines Boolean algebra (binary variables, logical operations) and its role in circuit design/simplification.
- **Partial Credit (1 pt):** Correct definition but no connection to digital logic.
- **No Credit (0 pts):** Incorrect definition or irrelevant role.
//// RUBRIC: **Total Points: 2**
- **Full Credit (2 pts):** Defines a flip-flop as a bistable memory element triggered by a clock, used for registers/counters.
- **Partial Credit (1 pt):** Mentions storage but omits clock dependency or applications.
- **No Credit (0 pts):** Incorrectly labels as combinational logic.
//// RUBRIC: **Total Points: 2**
- **Full Credit (2 pts):** Explains a clock cycle as the CPU’s basic timing unit and ties it to instruction processing/performance.
- **Partial Credit (1 pt):** Mentions timing but does not link to execution speed.
- **No Credit (0 pts):** Incorrect definition (e.g., conflates with clock speed).
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Compares volatile (e.g., RAM, power-dependent) and non-volatile (e.g., ROM, persistent) with examples and retention details.
- **Partial Credit (1–2 pts):** Correct categories but lacks examples or retention specifics.
- **No Credit (0 pts):** Incorrect classification (e.g., swaps definitions).
//// RUBRIC: **Total Points: 2**
- **Full Credit (2 pts):** Explains cache as fast, near-CPU memory storing frequently accessed data to reduce latency.
- **Partial Credit (1 pt):** Mentions speed but omits proximity or purpose.
- **No Credit (0 pts):** Incorrect function (e.g., long-term storage).
//// RUBRIC: **Total Points: 4**
- **Full Credit (4 pts):** Explains pipelining as overlapping stages (fetch, decode, execute) to boost throughput and details hazards (data/control/structural).
- **Partial Credit (2–3 pts):** Describes benefits but omits hazards or vice versa.
- **No Credit (0 pts):** Incorrect mechanism (e.g., parallel processing without overlapping).
//// RUBRIC: **Total Points: 4**
- **Full Credit (4 pts):** Compares RISC (small instruction set, speed, simplicity) and CISC (complex instructions, multi-function) with trade-offs (performance vs. hardware complexity).
- **Partial Credit (2–3 pts):** Identifies one architecture’s traits but not both or lacks depth.
- **No Credit (0 pts):** Incorrectly swaps traits or omits key differences.
//// RUBRIC: **Total Points: 2**
- **Full Credit (2 pts):** Defines buses as pathways transferring data, addresses, and control signals between components.
- **Partial Credit (1 pt):** Mentions data transfer but omits address/control roles.
- **No Credit (0 pts):** Incorrect function (e.g., power distribution).
//// RUBRIC: **Total Points: 3**
- **Full Credit (3 pts):** Lists all three steps (fetch, decode, execute) with clear explanations of each (e.g., fetching from memory, interpreting instruction, performing operation).
- **Partial Credit (1–2 pts):** Misses one step or provides vague descriptions.
- **No Credit (0 pts):** Incorrect sequence or missing steps.