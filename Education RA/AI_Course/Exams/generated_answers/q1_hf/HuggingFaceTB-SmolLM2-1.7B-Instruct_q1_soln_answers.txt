QUESTION: 6.034 Quiz 1, Spring 2005 > 1 Search Algorithms (16 points) > 1.1 Games The standard alpha-beta algorithm performs a depth-first exploration (to a pre-specified depth) of the game tree. > 1. Can alpha-beta be generalized to do a breadth-first exploration of the game tree and still get the optimal answer? Explain how or why not. If it can be generalized, indicate any advantages or disadvantages of using breadth-first search in this application.
//// ANSWER: > 1.2 Alpha-beta can be generalized to do a breadth-first exploration of the game tree and still get the optimal answer. The algorithm is called iterative deepening. It is similar to alpha-beta, but instead of stopping at a fixed depth, it continues to explore the tree until it reaches a predetermined maximum depth. The algorithm is as follows: Initialize alpha to negative infinity, beta to positive infinity, and depth to 0. While depth is less than or equal to the maximum depth, do the following: If the current node is a leaf node, return the utility of the node. Otherwise, set alpha to the minimum of alpha and the utility of the current node. Set beta to the maximum of beta and the utility of the current node. If beta is less than or equal to alpha, then the current node is a leaf node, so return the utility of the current node. Otherwise, set alpha to the minimum of alpha and the utility of the current node. Set beta to the maximum of beta and the utility of the current node. Set depth to depth + 1. If the current node is a leaf node, then return the utility of the current node.

QUESTION: 6.034 Quiz 1, Spring 2005 > 1 Search Algorithms (16 points) > 1.1 Games The standard alpha-beta algorithm performs a depth-first exploration (to a pre-specified depth) of the game tree. > 2. Can alpha-beta be generalized to do a progressive-deepening exploration of the game tree and still get the optimal answer? Explain how or why not. If it can be generalized, indicate any advantages or disadvantages of using progressive-deepening search in this application.
//// ANSWER: Answer:

QUESTION: 6.034 Quiz 1, Spring 2005 > 1 Search Algorithms (16 points) > 1.2 Algorithms > 1. You are faced with a path search problem with a very large branching factor, but where the answers always involve a relative short sequence of actions (whose exact length is unknown). All the actions have the same cost. What search algorithm would you use to find the optimal answer? Indicate under what conditions, if any, a visited or expanded list would be a good idea.
//// ANSWER: 2. You are faced with a path search problem with a very large branching factor, but where the answers always involve a relative short sequence of actions (whose exact length is unknown). All the actions have the same cost. What search algorithm would you use to find the optimal answer? Indicate under what conditions, if any, a visited or expanded list would be a good idea. 3. You are faced with a path search problem with a very large branching factor, but where the answers always involve a relative short sequence of actions (whose exact length is unknown). All the actions have the same cost. What search algorithm would you use to find the optimal answer? Indicate under what conditions, if any, a visited or expanded list would be a good idea. 4. You are faced with a path search problem with a very large branching factor, but where the answers always involve a relative short sequence of actions (whose exact length is unknown). All the actions have the same cost. What search algorithm would you use to find the optimal answer? Indicate under what conditions, if any, a visited or expanded list would be a good idea. 5.

QUESTION: 6.034 Quiz 1, Spring 2005 > 1 Search Algorithms (16 points) > 1.2 Algorithms > 2. You are faced with a path search problem with a very large branching factor, but where the answers always involve a relative short sequence of actions (whose exact length is unknown). These actions, however, have widely varying costs. What search algorithm would you use to find the optimal answer? Indicate under what conditions, if any, a visited or expanded list would be a good idea.
//// ANSWER: 

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 1. If we run full constraint propagation on the initial state, what are the resulting domains of the variables?
//// ANSWER: (2 points) 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | 1. The domains of the variables are { R, B }. 2. If we add the constraint that squares 1 and 3 must be different colors, what are the resulting domains of the variables? (2 points) 2. The domains of the variables are { R, B }. 3. If we add the constraint that squares 2 and 4 must be different colors, what are the resulting domains of the variables? (2 points) 3. The domains of the variables are { R, B }. 4. If we add the constraint that squares 1 and 5 must be different colors, what are the resulting domains of the variables? (2 points) 4. The domains of the variables are { R, B }. 5. If we add the constraint that squares 2 and 5 must be different colors, what are the resulting domains of the variables? (2 points) 5. The domains of the variables are { R, B }. 6.

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 2. Say, instead, the initial domain of variable 5 is restricted to { B } , with the other domains as before. If we now run full constraint propagation, what are the resulting domains of the variables?
//// ANSWER: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | 1. What are the domains of the variables after running full constraint propagation? 2. What are the domains of the variables after running full constraint propagation? 3. What are the domains of the variables after running full constraint propagation? 4. What are the domains of the variables after running full constraint propagation? 5. What are the domains of the variables after running full constraint propagation? 6. What are the domains of the variables after running full constraint propagation? 7. What are the domains of the variables after running full constraint propagation? 8. What are the domains of the variables after running full constraint propagation? 9. What are the domains of the variables after running full constraint propagation? 10. What are the domains of the variables after running full constraint propagation? 11. What are the domains of the variables after running full constraint propagation? 12. What are the domains of the variables after running full constraint propagation? 13. What are the domains of the variables after running full constraint propagation? 14. What are the domains of the variables after running full constraint propagation? 15.

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 3. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to R and do forward checking, what are the resulting domains of the other variables?
//// ANSWER: (1 point) > 4. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to B and do forward checking, what are the resulting domains of the other variables? (1 point) > 5. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to R and do backward checking, what are the resulting domains of the other variables? (1 point) > 6. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to B and do backward checking, what are the resulting domains of the other variables? (1 point) > 7. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to R and do constraint propagation, what are the resulting domains of the other variables? (1 point) > 8. If in the initial state (all variables have domains { R, B } ), we assign variable 1 to B and do constraint propagation, what are the resulting domains of the other variables? (1 point) > 9.

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 4. Assume that during backtracking we first attempt assigning variables to R and then to B. Assume, also, that we examine the variables in numerical order, starting with 1. Also, let the domain of variable 5 be { B } , the other domains are { R, B } . In the following tree, which shows the space of assignments to the 5 variables we care about, indicate how pure backtracking (BT) would proceed by placing a check mark next to any assignment that would be attempted during the search and crossing out the nodes where a constraint test would fail. Leave unmarked those nodes that would never be explored. RB RBRB RBRBRBRB RBRBRBRBRBRBRBRB BBBBBBBBBBBBBBBB
//// ANSWER: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 5. If we use backtracking with forward checking (BT-FC) in this same situation, give a list of all the assignments attempted, in sequence. Use the notation variable = color for assignments, for example, 1=R. | Assignment:   | None    | 1 = R   | 2= B   | 1= B    | 2= R   | 3= B   | 4= R   | 5= B   | |---------------|---------|---------|--------|---------|--------|--------|--------|--------| | Domain of 1:  | { R,B } |         |        |         |        |        |        |        | | Domain of 2:  | { R,B } | { B }   |        | { R }   |        |        |        |        | | Domain of 3:  | { R,B } | { R,B } | { R }  | { R,B } | { B }  |        |        |        | | Domain of 4:  | { R,B } | { B }   | { B }  | { R }   | { R }  | { R }  |        |        | | Domain of 5:  | { B }   | { B }   | {} ⇓   | { B }   | { B }  | { B }  | { B }  |        |
//// ANSWER: | |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|--------|---------|--------|--------|--------|--------| |---------------|---------|---------|

QUESTION: 6.034 Quiz 1, Spring 2005 > 2 Constraints (16 points) Consider assigning colors to a checkerboard so that squares that are adjacent vertically or horizontally do not have the same color. We know that this can be done with only two colors, say red (R) and black (B). We will limit our discussion to five squares on a 3x3 board, numbered as follows: 1 | 2 | 3 ---------- 4 | 5 | ---------- |   | Let's look at the CSP formulation of this problem. Let the squares be the variables and the colors be the values. All the variables have domains { R, B } . > 6. If we use backtracking with forward checking (BT-FC) but with dynamic variable ordering, using the most-constrained-variable strategy, give a list of all the variable assignments attempted, in sequence. If there is a tie between variables, use the lowest-numbered one first. Use the notation variable = color for assignments, for example, 1=R. | Assignment:   | None     | 5 = B    | 2= R   | 1= B   | 3= B   | 4= R   | |---------------|----------|----------|--------|--------|--------|--------| | Domain of 1:  | { R, B } | { R, B } | { B }  |        |        |        | | Domain of 2:  | { R, B } | { R }    |        |        |        |        | | Domain of 3:  | { R, B } | { R, B } | { B }  | { B }  |        |        | | Domain of 4:  | { R, B } | { R }    | { R }  | { R }  | { R }  |        | | Domain of 5:  | { B }    |          |        |        |        |        | { }
//// ANSWER: | |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------| |---------------|----------|----------|--------|--------|--------|--------|

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation A: The variables are the 3 k instrument/time slots. > 1. Domain:
//// ANSWER: {0,1} > 2. Size: 3k > 3. Constraints: C1, C2, C3 > 4. Yes, the constraints can be specified as binary constraints. For each instrument, we can set a binary variable to 1 if the instrument is scheduled for a time slot and 0 otherwise. For each scientist, we can set a binary variable to 1 if the scientist's observations are scheduled and 0 otherwise. The constraints C1, C2, and C3 are automatically satisfied because the variables are binary. > Formulation B: The variables are the m scientists. > 1. Domain: {0,1} > 2. Size: mn > 3. Constraints: C1, C2, C3 > 4. No, the constraints cannot be specified as binary constraints. For each scientist, we can set a binary variable to 1 if the scientist's observations are scheduled and 0 otherwise. However, we cannot set a binary variable to 1 if the scientist's observations are not scheduled. For example, if we want to schedule observations for all scientists, we cannot set a binary variable to 1 for the scientist who does not have any observations.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation A: The variables are the 3 k instrument/time slots. > 2. Size of domain:
//// ANSWER: 3k > 3. Constraints: C1, C2, C3 > 4. Constraints as binary constraints: No. > Formulation B: The variables are the m scientists. > 2. Size of domain: m > 3. Constraints: C1, C2, C3 > 4. Constraints as binary constraints: No. > Formulation C: The variables are the mn scientists' requests. > 2. Size of domain: mn > 3. Constraints: C1, C2, C3 > 4. Constraints as binary constraints: No. > 1. Value domain: 1 to mn. > 3. Constraints are necessarily satisfied: No. > 4. Constraints as binary constraints: No. > 1. Value domain: 1 to mn. > 2. Size of domain: mn > 3. Constraints: C1, C2, C3 > 4. Constraints as binary constraints: No. > 1. Value domain: 1 to mn. > 2. Size of domain: mn > 3.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation A: The variables are the 3 k instrument/time slots. > 3. Satisfied constraints:
//// ANSWER: C1, C2, C3. > 4. Yes, the constraints can be specified as binary constraints. The variables are the 3 k instrument/time slots. For each instrument, there are 3 possible time slots. For each time slot, there are 3 possible instruments. For each scientist, there are 3 possible time slots. For each time slot, there are 3 possible scientists. > Formulation B: The variables are the m scientists. > 3. Satisfied constraints: C1, C2, C3. > 4. No, the constraints cannot be specified as binary constraints. The variables are the m scientists. For each scientist, there are 3 possible time slots. For each time slot, there are 3 possible scientists. For each instrument, there are 3 possible time slots. For each time slot, there are 3 possible instruments. > Formulation C: The variables are the mn scientists' requests. > 3. Satisfied constraints: C1, C2, C3. > 4. No, the constraints cannot be specified as binary constraints. The variables are the mn scientists' requests. For each scientist, there are 3 possible time slots.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation A: The variables are the 3 k instrument/time slots. > 4. Binary constraints?:
//// ANSWER: No. > 5. Why not?: The constraints cannot be specified as binary constraints in this formulation. > 6. Counterexample: Consider the following example: n = 4, m = 2, k = 3. The scientists' requests are: [1, 2, 3] and [1, 2, 4]. The instrument/time slots are: [1, 2, 3] and [1, 2, 4]. The observations are: [1, 2, 3] and [1, 2, 4]. The constraints are: C1, C2, and C3. The observations [1, 2, 3] and [1, 2, 4] are both scheduled in time slot [1, 2, 3]. The constraints C1 and C2 are not satisfied. > Formulation B: The variables are the m scientists. > 4. Binary constraints?: No. > 5. Why not?: The constraints cannot be specified as binary constraints in this formulation. > 6. Counterexample: Consider the following example: n = 4, m = 2, k = 3.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation B: The variables are the m scientists. > 1. Domain:
//// ANSWER: {0,1} > 2. Size: m > 3. Constraints: C1, C2, C3. > 3. Constraints are necessarily satisfied because of formulation. > 4. Constraints can be specified as binary constraints in this formulation. > 5. Counterexample: m = 2, n = 3, k = 2. > 6. Counterexample: m = 3, n = 3, k = 2. > 7. Counterexample: m = 3, n = 3, k = 3. > 8. Counterexample: m = 3, n = 3, k = 4. > 9. Counterexample: m = 3, n = 3, k = 5. > 10. Counterexample: m = 3, n = 3, k = 6. > 11. Counterexample: m = 3, n = 3, k = 7. > 12. Counterexample: m = 3, n = 3, k = 8.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation B: The variables are the m scientists. > 2. Size of domain:
//// ANSWER: 3m. > 3. Constraints are necessarily satisfied. > 4. Yes, the constraints can be specified as binary constraints. > 5. Explain how. > 6. 3.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation B: The variables are the m scientists. > 3. Satisfied constraints:
//// ANSWER: C1, C2, C3. > 4. Yes, the constraints can be specified as binary constraints. The constraints are: C1: The number of observations per scientist is at most 2. C2: The number of observations per instrument is at most 1. C3: The number of observations per time slot is at most 1. The constraints are satisfied because of the formulation. For each scientist, the number of observations is at most 2, and for each instrument, the number of observations is at most 1. For each time slot, the number of observations is at most 1. > Formulation C: The variables are the mn scientists' requests. > 3. Satisfied constraints: C1, C2, C3. > 4. Yes, the constraints can be specified as binary constraints. The constraints are: C1: The number of observations per scientist is at most 2. C2: The number of observations per instrument is at most 1. C3: The number of observations per time slot is at most 1. The constraints are satisfied because of the formulation.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation B: The variables are the m scientists. > 4. Binary constraints?:
//// ANSWER: No. > 5. Why not?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that. > 6. Why?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that. > 7. Why?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that. > 8. Why?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that. > 9. Why?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that. > 10. Why?: The constraints cannot be specified as binary constraints in this formulation. For example, there may be a scientist who wants to make two observations, but the formulation does not allow for that.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation C: The variables are the mn scientists' requests. > 1. Domain:
//// ANSWER: {0,1} > 2. Size: 3^(mn) > 3. Constraints are necessarily satisfied. > 4. Yes, the constraints can be specified as binary constraints. > 5. How? > 6. No, the constraints cannot be specified as binary constraints. > 7. How? > 8. No, the constraints cannot be specified as binary constraints. > 9. No, the constraints cannot be specified as binary constraints. > 10. How? > 11. No, the constraints cannot be specified as binary constraints. > 12. No, the constraints cannot be specified as binary constraints. > 13. No, the constraints cannot be specified as binary constraints. > 14. No, the constraints cannot be specified as binary constraints. > 15. No, the constraints cannot be specified as binary constraints. > 16. No, the constraints cannot be specified as binary constraints. > 17. No, the constraints cannot be specified as binary constraints. > 18. No, the constraints cannot be specified as binary constraints. > 19. No, the constraints cannot be specified as binary constraints. > 20.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation C: The variables are the mn scientists' requests. > 2. Size of domain:
//// ANSWER: 3^(n+m) > 3. Constraints are necessarily satisfied because of the formulation. > 4. How: The constraints are binary constraints. > Formulation A: The variables are the 3 k instrument/time slots. > 2. Size of domain: 3^k > 3. Constraints are necessarily satisfied because of the formulation. > 4. How: The constraints are binary constraints. > Formulation B: The variables are the m scientists. > 2. Size of domain: 3^m > 3. Constraints are necessarily satisfied because of the formulation. > 4. How: The constraints are binary constraints.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation C: The variables are the mn scientists' requests. > 3. Satisfied constraints:
//// ANSWER: C1, C2, C3. > 4. Yes, the constraints can be specified as binary constraints. The constraints are: C1: The number of observations per scientist is 2. C2: The number of observations per instrument is at most 1. C3: The number of observations per time slot is at most 1. The constraints are satisfied because of the formulation. For example, if a scientist has 3 requests, then we can only schedule 2 of them. If a scientist has 2 requests, then we can schedule 1 of them. If a scientist has 1 request, then we can schedule 1 of them. If a scientist has 0 requests, then we can schedule 1 of them. The constraints are satisfied because of the formulation. For example, if a scientist has 3 requests, then we can only schedule 2 of them. If a scientist has 2 requests, then we can schedule 1 of them. If a scientist has 1 request, then we can schedule 1 of them. If a scientist has 0 requests, then we can schedule 1 of them. The constraints are satisfied because of the formulation.

QUESTION: 6.034 Quiz 1, Spring 2005 > 3 Constraint satisfaction (24 points) You are trying to schedule observations on the space telescope. We have m scientists who have each submitted a list of n telescope observations they would like to make. An observation is specified by a target, a telescope instrument, and a time slot. Each scientist is working on a different project so the targets in each scientist's observations are different from those of other scientists. There are k total time slots, and the telescope has three instruments, but all must be aimed at the same target at the same time. The greedy scientists cannot all be satisfied, so we will try to find a schedule that satisfies the following constraints: C1 . Exactly two observations from each scientist's list will be made (the choice of the two will be part of the solution). C2 . At most one observation per instrument per time slot is scheduled. C3 . The observations scheduled for a single time slot must have the same target. Note that for some set of requested observations, there may not be any consistent schedule, but that's fine. Consider the following three formulations of the problem. A . The variables are the 3 k instrument/time slots. B . The variables are the m scientists. C . The variables are the mn scientists' requests. For each formulation, specify 1 . The value domain for the variables. 2 . The size of the domain for the variables (in terms of k , m ,and n ). 3 . Which of the constraints are necessarily satisfied because of the formulation. 4 . Whether the constraints can be specified as binary constraints in this formulation. If they can, explain how. If not, provide a counterexample. > Formulation C: The variables are the mn scientists' requests. > 4. Binary constraints?:
//// ANSWER: No. > 3. Size of domain: 3k. > 2. Size of domain: mn. > 1. Value domain: {0, 1}. > 1. Value domain: {0, 1, 2}. > 1. Value domain: {0, 1, 2, 3}. > 1. Value domain: {0, 1, 2, 3, 4}. > 1. Value domain: {0, 1, 2, 3, 4, 5}. > 1. Value domain: {0, 1, 2, 3, 4, 5, 6}. > 1. Value domain: {0, 1, 2, 3, 4, 5, 6, 7}. > 1. Value domain: {0, 1, 2, 3, 4, 5, 6, 7, 8}. > 1. Value domain: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}. > 1.

QUESTION: 6.034 Quiz 1, Spring 2005 > 4 Search Problem formulation (23 points) Consider a Mars rover that has to drive around the surface, collect rock samples, and return to the lander. We want to construct a plan for its exploration. · It has batteries. The batteries can be charged by stopping and unfurling the solar collectors (pretend it's always daylight). One hour of solar collection results in one unit of battery charge. The batteries can hold a total of 10 units of charge. · It can drive. It has a map at 10-meter resolution indicating how many units of battery charge and how much time (in hours) will be required to reach a suitable rock in each square. · It can pick up a rock. This requires one unit of battery charge. The robot has a map at 10-meter resolution that indicates the type of rock expected in that location and the expected weight of rocks in that location. Assume only one type of rock and one size can be found in each square. The objective for the rover is to get one of each of 10 types of rocks, within three days, while minimizing a combination of their total weight and the distance traveled. You are given a tradeoff parameter α that converts units of weight to units of distance. The rover starts at the lander with a full battery and must return to the lander. Here is a list of variables that might be used to describe the rover's world: · types of rocks already collected · current rover location (square on map) · current lander location (square on map) · weight of rocks at current location (square on map) · cost to traverse the current location (square on map) · time since last charged · time since departure from lander · current day · current battery charge level · total battery capacity · distance to lander · total weight of currently collected rocks > 1. Use a set of the variables above to describe the rover's state. Do not include extraneous information.
//// ANSWER: 2. Write a function that takes a state and returns a list of actions. Actions should be strings that describe the rover's actions. For example, "move to square 10" or "charge for 1 hour". 3. Write a function that takes a state and a list of actions and returns a new state. The new state should be the result of applying the actions to the current state. 4. Write a function that takes a state and a list of actions and returns a new state. The new state should be the result of applying the actions to the current state. The new state should also include a new variable called "time since last charged" that is the sum of the times since the last action and the time since the last action. 5. Write a function that takes a state and a list of actions and returns a new state. The new state should be the result of applying the actions to the current state. The new state should also include a new variable called "time since departure from lander" that is the sum of the times since the last action and the time since the last action. 6. Write a function that takes a state and a list of actions and returns a new state.

QUESTION: 6.034 Quiz 1, Spring 2005 > 4 Search Problem formulation (23 points) Consider a Mars rover that has to drive around the surface, collect rock samples, and return to the lander. We want to construct a plan for its exploration. · It has batteries. The batteries can be charged by stopping and unfurling the solar collectors (pretend it's always daylight). One hour of solar collection results in one unit of battery charge. The batteries can hold a total of 10 units of charge. · It can drive. It has a map at 10-meter resolution indicating how many units of battery charge and how much time (in hours) will be required to reach a suitable rock in each square. · It can pick up a rock. This requires one unit of battery charge. The robot has a map at 10-meter resolution that indicates the type of rock expected in that location and the expected weight of rocks in that location. Assume only one type of rock and one size can be found in each square. The objective for the rover is to get one of each of 10 types of rocks, within three days, while minimizing a combination of their total weight and the distance traveled. You are given a tradeoff parameter α that converts units of weight to units of distance. The rover starts at the lander with a full battery and must return to the lander. Here is a list of variables that might be used to describe the rover's world: · types of rocks already collected · current rover location (square on map) · current lander location (square on map) · weight of rocks at current location (square on map) · cost to traverse the current location (square on map) · time since last charged · time since departure from lander · current day · current battery charge level · total battery capacity · distance to lander · total weight of currently collected rocks > 2. Specify the goal test.
//// ANSWER: 3. Write a test for the rover's ability to collect rocks. 4. Write a test for the rover's ability to return to the lander. 5. Write a test for the rover's ability to charge its batteries. 6. Write a test for the rover's ability to drive to a location with a rock. 7. Write a test for the rover's ability to pick up a rock. 8. Write a test for the rover's ability to charge its batteries. 9. Write a test for the rover's ability to return to the lander. 10. Write a test for the rover's ability to charge its batteries. 11. Write a test for the rover's ability to drive to a location with a rock. 12. Write a test for the rover's ability to pick up a rock. 13. Write a test for the rover's ability to charge its batteries. 14. Write a test for the rover's ability to drive to a location with a rock. 15. Write a test for the rover's ability to pick up a rock. 16. Write a test for the rover's ability to charge its batteries. 17.

QUESTION: 6.034 Quiz 1, Spring 2005 > 4 Search Problem formulation (23 points) Consider a Mars rover that has to drive around the surface, collect rock samples, and return to the lander. We want to construct a plan for its exploration. · It has batteries. The batteries can be charged by stopping and unfurling the solar collectors (pretend it's always daylight). One hour of solar collection results in one unit of battery charge. The batteries can hold a total of 10 units of charge. · It can drive. It has a map at 10-meter resolution indicating how many units of battery charge and how much time (in hours) will be required to reach a suitable rock in each square. · It can pick up a rock. This requires one unit of battery charge. The robot has a map at 10-meter resolution that indicates the type of rock expected in that location and the expected weight of rocks in that location. Assume only one type of rock and one size can be found in each square. The objective for the rover is to get one of each of 10 types of rocks, within three days, while minimizing a combination of their total weight and the distance traveled. You are given a tradeoff parameter α that converts units of weight to units of distance. The rover starts at the lander with a full battery and must return to the lander. Here is a list of variables that might be used to describe the rover's world: · types of rocks already collected · current rover location (square on map) · current lander location (square on map) · weight of rocks at current location (square on map) · cost to traverse the current location (square on map) · time since last charged · time since departure from lander · current day · current battery charge level · total battery capacity · distance to lander · total weight of currently collected rocks > 3. Specify the actions. Indicate how they modify the state and any preconditions for being used.
//// ANSWER: Actions should be described in English. > 4. Provide a plan for the rover to collect all 10 types of rocks within three days. Provide a description of the plan in English.

QUESTION: 6.034 Quiz 1, Spring 2005 > 4 Search Problem formulation (23 points) Consider a Mars rover that has to drive around the surface, collect rock samples, and return to the lander. We want to construct a plan for its exploration. · It has batteries. The batteries can be charged by stopping and unfurling the solar collectors (pretend it's always daylight). One hour of solar collection results in one unit of battery charge. The batteries can hold a total of 10 units of charge. · It can drive. It has a map at 10-meter resolution indicating how many units of battery charge and how much time (in hours) will be required to reach a suitable rock in each square. · It can pick up a rock. This requires one unit of battery charge. The robot has a map at 10-meter resolution that indicates the type of rock expected in that location and the expected weight of rocks in that location. Assume only one type of rock and one size can be found in each square. The objective for the rover is to get one of each of 10 types of rocks, within three days, while minimizing a combination of their total weight and the distance traveled. You are given a tradeoff parameter α that converts units of weight to units of distance. The rover starts at the lander with a full battery and must return to the lander. Here is a list of variables that might be used to describe the rover's world: · types of rocks already collected · current rover location (square on map) · current lander location (square on map) · weight of rocks at current location (square on map) · cost to traverse the current location (square on map) · time since last charged · time since departure from lander · current day · current battery charge level · total battery capacity · distance to lander · total weight of currently collected rocks > 4. Specify a function that determines the cost of each action. charge : move : pick-up-rock :
//// ANSWER: return-to-lander : 0 : 0 : 1 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 : 0 :

QUESTION: 6.034 Quiz 1, Spring 2005 > 4 Search Problem formulation (23 points) Consider a Mars rover that has to drive around the surface, collect rock samples, and return to the lander. We want to construct a plan for its exploration. · It has batteries. The batteries can be charged by stopping and unfurling the solar collectors (pretend it's always daylight). One hour of solar collection results in one unit of battery charge. The batteries can hold a total of 10 units of charge. · It can drive. It has a map at 10-meter resolution indicating how many units of battery charge and how much time (in hours) will be required to reach a suitable rock in each square. · It can pick up a rock. This requires one unit of battery charge. The robot has a map at 10-meter resolution that indicates the type of rock expected in that location and the expected weight of rocks in that location. Assume only one type of rock and one size can be found in each square. The objective for the rover is to get one of each of 10 types of rocks, within three days, while minimizing a combination of their total weight and the distance traveled. You are given a tradeoff parameter α that converts units of weight to units of distance. The rover starts at the lander with a full battery and must return to the lander. Here is a list of variables that might be used to describe the rover's world: · types of rocks already collected · current rover location (square on map) · current lander location (square on map) · weight of rocks at current location (square on map) · cost to traverse the current location (square on map) · time since last charged · time since departure from lander · current day · current battery charge level · total battery capacity · distance to lander · total weight of currently collected rocks > 5. This can be treated as a path search problem. We would like to find a heuristic. Say whether each of these possible heuristics would be useful in finding the optimal path or, if not, what's wrong with them. Let l be the number of rocks already collected. H1 : The sum of the distances (in the map) from the rover to the 10 -l closest locations for the missing types of rocks. H2 : The length of the shortest tour through the 10 -l closest locations for the missing types of rocks. H3 : The distance back to the lander
//// ANSWER: . H4 : The total weight of the currently collected rocks. H5 : The total battery charge level. H6 : The time since last charged. H7 : The time since departure from lander. H8 : The current day. H9 : The current battery charge level. H10 : The total weight of the currently collected rocks. H11 : The total battery capacity. H12 : The distance to the lander. H13 : The total number of rocks already collected. H14 : The total number of rocks to be collected. H15 : The total weight of the currently collected rocks. H16 : The total weight of the currently collected rocks. H17 : The total weight of the currently collected rocks. H18 : The total weight of the currently collected rocks. H19 : The total weight of the currently collected rocks. H20 : The total weight of the currently collected rocks. H21 : The total weight of the currently collected rocks. H22 : The total weight of the currently collected rocks. H23 : The total weight of the currently collected rocks. H24 : The total weight of the currently collected rocks.

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G1: A → B A → D B → C B → D B → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why
//// ANSWER: not? 4. Optimal path? If not, why not? > G2: A → B A → D B → C B → D B → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why not? 4. Optimal path? If not, why not? > G3: A → B A → D B → C B → D B → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why not? 4. Optimal path? If not, why not? > G4: A → B A → D B → C B → D B → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why not? 4. Optimal path? If not, why not? > G5: A → B A → D B → C B → D B → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why not? 4. Optimal path?

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G2: A (6) → B A (3) → D D (4) → C D → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why
//// ANSWER: not? 4. Best-first search: 5. Depth-first search: 6. Breadth-first search: 7. Uniform cost search: 8. A* search: 9. G3: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why not? 4. Best-first search: 5. Depth-first search: 6. Breadth-first search: 7. Uniform cost search: 8. A* search: 9. G4: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path?

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G3: A (7) → B A (6) → D D (8) → C D (6) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why
//// ANSWER: not? 4. Best-first search (if any): 5. Did it find least-cost path? If not, why not? 6. Best-first search (if any): 7. Did it find least-cost path? If not, why not? 8. Best-first search (if any): 9. Did it find least-cost path? If not, why not? 10. Best-first search (if any): 11. Did it find least-cost path? If not, why not? 12. Best-first search (if any): 13. Did it find least-cost path? If not, why not? 14. Best-first search (if any): 15. Did it find least-cost path? If not, why not? 16. Best-first search (if any): 17. Did it find least-cost path? If not, why not? 18. Best-first search (if any): 19. Did it find least-cost path? If not, why not? 20. Best-first search (if any): 21.

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G4: A (3) → B A (2) → D D (0) → C C → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why
//// ANSWER: not? 4. Did it find optimal path? If not, why not? 5. Did it find a path at all? If not, why not? 6. Did it find an optimal path? If not, why not? 7. Did it find a path at all? If not, why not? 8. Did it find an optimal path? If not, why not? 9. Did it find a path at all? If not, why not? 10. Did it find an optimal path? If not, why not? 11. Did it find a path at all? If not, why not? 12. Did it find an optimal path? If not, why not? 13. Did it find a path at all? If not, why not? 14. Did it find an optimal path? If not, why not? 15. Did it find a path at all? If not, why not? 16. Did it find an optimal path? If not, why not? 17. Did it find a path at all? If not, why not? 18. Did it find an optimal path?

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G5: A → B A → D B → C B → D B → G C → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why?
//// ANSWER: 4. Did it find optimal path? If not, why? 5. Did it find a path that was optimal given the heuristic? If not, why? 6. Did it find a path that was optimal given the heuristic? If not, why? 7. Did it find a path that was optimal given the heuristic? If not, why? 8. Did it find a path that was optimal given the heuristic? If not, why? 9. Did it find a path that was optimal given the heuristic? If not, why? 10. Did it find a path that was optimal given the heuristic? If not, why? 11. Did it find a path that was optimal given the heuristic? If not, why? 12. Did it find a path that was optimal given the heuristic? If not, why? 13. Did it find a path that was optimal given the heuristic? If not, why? 14. Did it find a path that was optimal given the heuristic? If not, why? 15. Did it find a path that was optimal given the heuristic? If not, why? 16. Did it find a path that was optimal given the heuristic?

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G6: A (4) → B B (6) → C B (7) → D B (7) → G A (5) → D D (4) → C D (6) → G C (5) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why?
//// ANSWER: 4. Best-first search: 5. Depth-first search: 6. Breadth-first search: 7. Uniform cost search: 8. A*: 9.

QUESTION: 6.034 Quiz 1, Spring 2005 > 5 Search traces (21 points) Consider the graph shown in the figure below. We can search it with a variety of different algorithms, resulting in different search trees. Each of the trees (labeled G1-G7) was generated by searching this graph, but with a different algorithm. Assume that children of a node are visited in alphabetical order. Each tree shows all the nodes that have been visited. Numbers next to nodes indicate the relevant 'score' used by the algorithm for those nodes. G: A (1) → B A (3) → D A (2) → B B (5) → C B (6) → G B (4) → D D (1) → C D (3) → G C (1) → G For each tree, indicate whether it was generated with 1. Depth first search 2. Breadth first search 3. Uniform cost search 4. A* search 5. Best-first (greedy) search In all cases a strict expanded list was used. Furthermore, if you choose an algorithm that uses a heuristic function, say whether we used H1 :heuristic 1 = { h ( A )=3 ,h ( B )=6 ,h ( C )=4 ,h ( D )=3 } H2 :heuristic 2 = { h ( A )=3 ,h ( B )=3 ,h ( C )=0 ,h ( D )=2 } Also, for all algorithms, say whether the result was an optimal path (measured by sum of link costs), and if not, why not. Be specific. Write your answers in the space provided below (not on the figure). > G7: A (1) → B A (3) → D B (6) → C B (5) → D B (7) → G D (6) → C D (8) → G D (4) → C D (6) → G C (5) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why?
//// ANSWER: 4. Best-first search: 5. Depth-first search: 6. Breadth-first search: 7. Uniform cost search: 8. A* search: 9. G1: A (1) → B A (3) → D B (6) → C B (5) → D B (7) → G D (6) → C D (8) → G D (4) → C D (6) → G C (5) → G 1. Algorithm: 2. Heuristic (if any): 3. Did it find least-cost path? If not, why? 4. Best-first search: 5. Depth-first search: 6. Breadth-first search: 7. Uniform cost search: 8. A* search: 9. G2: A (1) → B A (3) → D B (6) → C B (5) → D B (7) → G D (6) → C D (8) → G D (4) → C D (6) → G C (5) → G 1. Algorithm: 2.

