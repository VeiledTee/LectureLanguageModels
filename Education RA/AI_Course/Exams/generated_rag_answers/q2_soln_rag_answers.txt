QUESTION: # 6.034 Quiz 2, Spring 2005
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 1 Decision Trees (13 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Data points:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Negative: (-1, 0), (2, 1), (2, -2)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Positive: (0, 0), (1, 0)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Construct a decision tree for the data.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Draw decision boundaries on the graph.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. Explain how you chose the top-level test in the tree.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 4. What class does the tree predict for the point (1, -1.01)?
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 2 Nearest Neighbors (8 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Draw 1-NN decision boundaries.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. What class does 1-NN predict for (1, -1.01)? Explain.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. What class does 3-NN predict for (1, -1.01)? Explain.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 3 Perceptron (7 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Data points:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Negative: (-1, 0), (2, -2)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Positive: (1, 0)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.83 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Explain how the perceptron algorithm produces the separator (0, 1, 2).
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Predict the class for (2.0, -1.01).
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. Describe the result if applied to the 5-point dataset from Problem 1.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.83 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 4 Neural Net (9 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.09 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Compute sigmoid outputs for points (-1,0), (2,-2), (1,0) with weights \(w_0=0, w_1=1, w_2=1\).
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.07 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Calculate \(\Delta w_2\) via backpropagation for input (2,-2).
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.04 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 5 Naive Bayes (8 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.02 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Training data (12 examples: 6 positive, 6 negative):
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.07 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: |  Feature  | \(y=0\) | \(y=1\) |
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.05 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: |-----------|---------|---------|
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.03 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: | \(x_1=1\) | 6       | 6       |
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.00 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: | \(x_2=1\) | 0       | 0       |
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.05 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: | \(x_3=1\) | 2       | 4       |
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.03 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Compute \(\Pr(x_1=1|y=0)\), \(\Pr(x_2=1|y=1)\), \(\Pr(x_3=0|y=0)\) with Laplacian correction.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.00 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Identify the most influential feature.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.03 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 6 Learning Algorithms (16 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.00 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: For each scenario, choose the best algorithm and justify:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.98 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. 1M training examples, 6D features, 100 test queries.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Classifier for kindergarten special education requiring justification.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.00 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. Book preference prediction with 1M features and frequent updates.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.98 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 4. Rainfall prediction from ocean currents/tides.
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 7 Error vs Complexity (15 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.98 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: For each algorithm, specify:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Perceptron
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Linear SVM
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. Decision Tree (fixed depth)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.96 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 4. Neural Network (no regularization)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 5. SVM (\(c < \infty\))
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 8 Regression (12 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.94 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Draw regression outputs for:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. 2-NN (equally weighted)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Regression Trees (leaf size=1)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 3. Linear Neural Network
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.92 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 4. Multi-layer Neural Network
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ## 9 SVM (12 pts)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Data points:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.90 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Negative: (-1, 0), (2, -2)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: Positive: (1, 0)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 1. Evaluate if separators satisfy SVM conditions:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.83 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (a) \(x_1 + x_2 = 0\)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.88 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (b) \(x_1 + 1.5x_2 = 0\)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (c) \(x_1 + 2x_2 = 0\)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.83 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (d) \(2x_1 + 3x_2 = 0\)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.85 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: ### 2. Match kernels to decision boundaries:
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.83 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (a) Polynomial (degree=2)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.81 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (b) Polynomial (degree=3)
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 5.79 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (c) RBF (\(\sigma=0.5\))
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.07 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

QUESTION: (d) RBF (\(\sigma=1.0\))
//// ANSWER: Error: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.71 GiB of which 11.75 MiB is free. Including non-PyTorch memory, this process has 3.67 GiB memory in use. Of the allocated memory 3.57 GiB is allocated by PyTorch, and 6.05 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

